{"version":3,"sources":["components/AddTodo/index.jsx","components/TodoList/index.jsx","utils/index.js","App.jsx","index.js"],"names":["AddTodo","todoList","setTodoList","session","useSession","useState","todoText","setTodoText","addTodo","text","a","indexUrl","getSourceUrl","todoWithText","addStringNoLocale","createThing","todoWithDate","addDatetime","Date","todoWithType","addUrl","updatedTodoList","setThing","saveSolidDatasetAt","fetch","updatedDataset","handleSubmit","event","preventDefault","className","onSubmit","htmlFor","id","type","value","onChange","e","target","TEXT_PREDICATE","CREATED_PREDICATE","COMPLETED_PREDICATE","CompletedBody","checked","handleCheck","thing","useThing","DeleteButton","deleteTodo","onClick","TodoList","todoThings","getThingAll","sort","b","getDatetime","todo","todosUrl","updatedTodos","removeThing","date","undoneTodo","removeDatetime","doneTodo","updatedList","thingsArray","filter","t","getUrl","map","dataset","length","things","property","header","sortable","dataType","body","toDateString","Boolean","getOrCreateTodoList","containerUri","getSolidDataset","statusCode","createSolidDataset","authOptions","clientName","App","oidcIssuer","setOidcIssuer","useEffect","info","isLoggedIn","webId","profileDataset","profileThing","getThing","podsUrls","getUrlAll","pod","list","datasetUrl","thingUrl","properties","name","redirectUrl","window","location","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94b4eaf9.chunk.js","sourcesContent":["import {\n  addDatetime,\n  addStringNoLocale,\n  addUrl,\n  createThing,\n  getSourceUrl,\n  saveSolidDatasetAt,\n  setThing,\n} from \"@inrupt/solid-client\";\nimport { useSession } from \"@inrupt/solid-ui-react\";\nimport React, { useState } from \"react\";\nimport \"./style.css\";\n\nconst TEXT_PREDICATE = \"http://schema.org/text\";\nconst CREATED_PREDICATE = \"http://www.w3.org/2002/12/cal/ical#created\";\nconst TODO_CLASS = \"http://www.w3.org/2002/12/cal/ical#Vtodo\";\nconst TYPE_PREDICATE = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\n\nfunction AddTodo({ todoList, setTodoList }) {\n  const { session } = useSession();\n  const [todoText, setTodoText] = useState(\"\");\n\n  const addTodo = async (text) => {\n    const indexUrl = getSourceUrl(todoList);\n    const todoWithText = addStringNoLocale(createThing(), TEXT_PREDICATE, text);\n    const todoWithDate = addDatetime(\n      todoWithText,\n      CREATED_PREDICATE,\n      new Date()\n    );\n    const todoWithType = addUrl(todoWithDate, TYPE_PREDICATE, TODO_CLASS);\n    const updatedTodoList = setThing(todoList, todoWithType);\n    const updatedDataset = await saveSolidDatasetAt(indexUrl, updatedTodoList, {\n      fetch: session.fetch,\n    });\n    setTodoList(updatedDataset);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    addTodo(todoText);\n    setTodoText(\"\");\n  };\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setTodoText(e.target.value);\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      <label htmlFor=\"todo-input\">\n        <input\n          id=\"todo-input\"\n          type=\"text\"\n          value={todoText}\n          onChange={handleChange}\n        />\n      </label>\n      <button className=\"add-button\" type=\"submit\">\n        Add Todo\n      </button>\n    </form>\n  );\n}\n\nexport default AddTodo;\n","import {\n  addDatetime,\n  getDatetime,\n  getSourceUrl,\n  getThingAll,\n  getUrl,\n  removeDatetime,\n  removeThing,\n  saveSolidDatasetAt,\n  setThing,\n} from \"@inrupt/solid-client\";\nimport {\n  Table,\n  TableColumn,\n  useThing,\n  useSession,\n} from \"@inrupt/solid-ui-react\";\nimport React from \"react\";\nimport \"./style.css\";\n\nconst TEXT_PREDICATE = \"http://schema.org/text\";\nconst CREATED_PREDICATE = \"http://www.w3.org/2002/12/cal/ical#created\";\nconst COMPLETED_PREDICATE = \"http://www.w3.org/2002/12/cal/ical#completed\";\nconst TODO_CLASS = \"http://www.w3.org/2002/12/cal/ical#Vtodo\";\nconst TYPE_PREDICATE = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\";\n\nfunction CompletedBody({ checked, handleCheck }) {\n  const { thing } = useThing();\n  return (\n    <label>\n      <input\n        type=\"checkbox\"\n        checked={checked}\n        onChange={() => handleCheck(thing, checked)}\n      />\n    </label>\n  );\n}\n\nfunction DeleteButton({ deleteTodo }) {\n  const { thing } = useThing();\n  return (\n    <button className=\"delete-button\" onClick={() => deleteTodo(thing)}>\n      Delete\n    </button>\n  );\n}\n\nfunction TodoList({ todoList, setTodoList }) {\n  const todoThings = todoList ? getThingAll(todoList) : [];\n  todoThings.sort((a, b) => {\n    return (\n      getDatetime(a, CREATED_PREDICATE) - getDatetime(b, CREATED_PREDICATE)\n    );\n  });\n\n  const { fetch } = useSession();\n\n  const deleteTodo = async (todo) => {\n    const todosUrl = getSourceUrl(todoList);\n    const updatedTodos = removeThing(todoList, todo);\n    const updatedDataset = await saveSolidDatasetAt(todosUrl, updatedTodos, {\n      fetch,\n    });\n    setTodoList(updatedDataset);\n  };\n\n  const handleCheck = async (todo, checked) => {\n    const todosUrl = getSourceUrl(todoList);\n    let updatedTodos;\n    if (!checked) {\n      const date = new Date();\n      const doneTodo = addDatetime(todo, COMPLETED_PREDICATE, date);\n      updatedTodos = setThing(todoList, doneTodo, { fetch });\n    } else {\n      const date = getDatetime(todo, COMPLETED_PREDICATE);\n      const undoneTodo = removeDatetime(todo, COMPLETED_PREDICATE, date);\n      updatedTodos = setThing(todoList, undoneTodo, { fetch });\n    }\n    const updatedList = await saveSolidDatasetAt(todosUrl, updatedTodos, {\n      fetch,\n    });\n    setTodoList(updatedList);\n  };\n\n  const thingsArray = todoThings\n    .filter((t) => getUrl(t, TYPE_PREDICATE) === TODO_CLASS)\n    .map((t) => {\n      return { dataset: todoList, thing: t };\n    });\n  if (!thingsArray.length) return null;\n\n  return (\n    <div className=\"table-container\">\n      <span className=\"tasks-message\">\n        Your to-do list has {thingsArray.length} items\n      </span>\n      <Table className=\"table\" things={thingsArray}>\n        <TableColumn property={TEXT_PREDICATE} header=\"To Do\" sortable />\n        <TableColumn\n          property={CREATED_PREDICATE}\n          dataType=\"datetime\"\n          header=\"Created At\"\n          body={({ value }) => value.toDateString()}\n          sortable\n        />\n        <TableColumn\n          property={COMPLETED_PREDICATE}\n          dataType=\"datetime\"\n          header=\"Done\"\n          body={({ value }) => (\n            <CompletedBody checked={Boolean(value)} handleCheck={handleCheck} />\n          )}\n        />\n        <TableColumn\n          property={TEXT_PREDICATE}\n          header=\"\"\n          body={() => <DeleteButton deleteTodo={deleteTodo} />}\n        />\n      </Table>\n    </div>\n  );\n}\n\nexport default TodoList;\n","// utils/index.js\n\nimport {\n  createSolidDataset,\n  getSolidDataset,\n  saveSolidDatasetAt,\n} from \"@inrupt/solid-client\";\n\nexport async function getOrCreateTodoList(containerUri, fetch) {\n  const indexUrl = `${containerUri}index.ttl`;\n  try {\n    const todoList = await getSolidDataset(indexUrl, { fetch });\n    return todoList;\n  } catch (error) {\n    if (error.statusCode === 404) {\n      const todoList = await saveSolidDatasetAt(\n        indexUrl,\n        createSolidDataset(),\n        {\n          fetch,\n        }\n      );\n      return todoList;\n    }\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  LoginButton,\n  LogoutButton,\n  Text,\n  useSession,\n  CombinedDataProvider,\n} from \"@inrupt/solid-ui-react\";\nimport { getSolidDataset, getUrlAll, getThing } from \"@inrupt/solid-client\";\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport { getOrCreateTodoList } from \"./utils\";\nimport \"./App.css\";\n\nconst STORAGE_PREDICATE = \"http://www.w3.org/ns/pim/space#storage\";\n\nconst authOptions = {\n  clientName: \"Solid Todo App\",\n};\n\nfunction App() {\n  const { session } = useSession();\n  const [todoList, setTodoList] = useState();\n  const [oidcIssuer, setOidcIssuer] = useState(\"\");\n\n  const handleChange = (event) => {\n    setOidcIssuer(event.target.value);\n  };\n\n  useEffect(() => {\n    if (!session || !session.info.isLoggedIn) return;\n    (async () => {\n      const profileDataset = await getSolidDataset(session.info.webId, {\n        fetch: session.fetch,\n      });\n      const profileThing = getThing(profileDataset, session.info.webId);\n      const podsUrls = getUrlAll(profileThing, STORAGE_PREDICATE);\n      const pod = podsUrls[0];\n      const containerUri = `${pod}todos/`;\n      const list = await getOrCreateTodoList(containerUri, session.fetch);\n      setTodoList(list);\n    })();\n  }, [session, session.info.isLoggedIn]);\n\n  return (\n    <div className=\"app-container\">\n      {session.info.isLoggedIn ? (\n        <CombinedDataProvider\n          datasetUrl={session.info.webId}\n          thingUrl={session.info.webId}\n        >\n          <div className=\"message logged-in\">\n            <span>You are logged in as: </span>\n            <Text\n              properties={[\n                \"http://xmlns.com/foaf/0.1/name\",\n                \"http://www.w3.org/2006/vcard/ns#fn\",\n              ]}\n            />\n            <LogoutButton />\n          </div>\n          <section>\n            <AddTodo todoList={todoList} setTodoList={setTodoList} />\n            <TodoList todoList={todoList} setTodoList={setTodoList} />\n          </section>\n        </CombinedDataProvider>\n      ) : (\n        <div className=\"message\">\n          <span>You are not logged in. </span>\n          <span>\n            Log in with:\n            <input\n              className=\"oidc-issuer-input \"\n              type=\"text\"\n              name=\"oidcIssuer\"\n              list=\"providers\"\n              value={oidcIssuer}\n              onChange={handleChange}\n            />\n            <datalist id=\"providers\">\n              <option value=\"https://broker.pod.inrupt.com/\" />\n              <option value=\"https://inrupt.net/\" />\n            </datalist>\n          </span>\n          <LoginButton\n            oidcIssuer={oidcIssuer}\n            redirectUrl={window.location.href}\n            authOptions={authOptions}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { SessionProvider } from \"@inrupt/solid-ui-react\";\n\nReactDOM.render(\n  <SessionProvider>\n    <App />\n  </SessionProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}