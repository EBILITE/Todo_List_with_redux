{"version":3,"sources":["../node_modules/n3/node_modules/readable-stream/errors-browser.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/n3/src/IRIs.js","../node_modules/inherits/inherits_browser.js","webpack:///C:/Users/PC/Desktop/Redux_ToDo/redux-app/node_modules/buffer/index.js?4521","../node_modules/n3/src/N3Lexer.js","../node_modules/n3/node_modules/readable-stream/readable-browser.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/state.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/queue-microtask/index.js","webpack:///(webpack)/buildin/global.js?cd00","webpack:///C:/Users/PC/Desktop/Redux_ToDo/redux-app/node_modules/base64-js/index.js?9a95","webpack:///C:/Users/PC/Desktop/Redux_ToDo/redux-app/node_modules/ieee754/index.js?2328","webpack:///C:/Users/PC/Desktop/Redux_ToDo/redux-app/node_modules/isarray/index.js?6321","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../node_modules/util-deprecate/browser.js","../node_modules/safe-buffer/index.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/async_iterator.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/from-browser.js","../node_modules/n3/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/n3/node_modules/readable-stream/lib/internal/streams/pipeline.js","../node_modules/n3/src/N3Util.js","../node_modules/n3/src/N3DataFactory.js","../node_modules/n3/src/N3Parser.js","../node_modules/n3/src/N3Writer.js","../node_modules/n3/src/N3Store.js","../node_modules/n3/src/N3StreamParser.js","../node_modules/n3/src/N3StreamWriter.js"],"names":["codes","createErrorType","code","message","Base","Error","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","call","this","getMessage","prototype","Object","create","constructor","__proto__","name","oneOf","expected","thing","Array","isArray","len","length","map","i","String","concat","slice","join","value","TypeError","actual","determiner","search","pos","msg","substr","replace","str","this_len","undefined","substring","endsWith","type","start","indexOf","includes","arg","module","exports","objectKeys","keys","obj","key","push","Duplex","Readable","require","Writable","v","method","options","allowHalfOpen","readable","writable","once","onend","_writableState","ended","process","nextTick","onEndNT","self","end","defineProperty","enumerable","get","highWaterMark","getBuffer","_readableState","destroyed","set","RDF","XSD","SWAP","xsd","decimal","boolean","double","integer","string","rdf","nil","first","rest","langString","owl","sameAs","r","forSome","forAll","log","implies","ctor","superCtor","super_","configurable","TempCtor","base64","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","encodingOrOffset","allocUnsafe","from","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","encoding","isEncoding","write","fromString","isBuffer","checked","copy","buffer","val","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","n","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","utf8Write","blitBuffer","asciiWrite","byteArray","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","Symbol","species","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","swap16","swap32","swap64","arguments","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","namespaces","escapeSequence","escapeReplacements","illegalIriChars","lineModeRegExps","_iri","_unescapedIri","_simpleQuotedString","_langcode","_blank","_newline","_comment","_whitespace","_endOfFile","invalidRegExp","N3Lexer","_simpleApostropheString","_prefix","_prefixed","_variable","_number","_boolean","_keyword","_sparqlKeyword","_shortPredicates","_lineMode","lineMode","_n3Mode","RegExp","n3","_comments","comments","_literalClosingPos","callback","inputFinished","input","_input","outputComments","whiteSpaceMatch","comment","exec","line","_line","prefix","test","firstChar","matchLength","inconclusive","_previousMarker","_unescape","reportSyntaxError","_parseLiteral","toUpperCase","token","previousToken","_syntaxError","item","invalid","replaced","sequence","unicode4","unicode8","escapedChar","charCode","opening","openingLength","closingPos","backslashCount","raw","lines","split","issue","err","context","startsWith","_readStartingBom","error","tokens","_tokenizeToEnd","t","queueMicrotask","_pendingBuffer","setEncoding","on","Stream","Transform","PassThrough","finished","pipeline","ERR_STREAM_PREMATURE_CLOSE","noop","eos","stream","opts","called","_len","args","_key","onlegacyfinish","onfinish","writableEnded","readableEnded","endEmitted","onerror","onclose","onrequest","req","setHeader","abort","isRequest","removeListener","ReadableState","EventEmitter","EElistenerCount","emitter","listeners","OurUint8Array","debug","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","_read","destroy","_destroy","readableAddChunk","chunk","addToFront","skipChunkCheck","er","state","emitReadable","emitReadable_","onEofChunk","chunkInvalid","getPrototypeOf","_uint8ArrayToBuffer","addChunk","maybeReadMore","emit","unshift","_undestroy","undestroy","cb","isPaused","enc","p","head","content","next","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","listenerCount","resume","nReadingNextTick","resume_","fromList","shift","consume","endReadable","endReadableNT","wState","xs","l","nOrig","doRead","pipe","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","ondrain","ondata","cleanedUp","needDrain","pipeOnDrain","pause","event","fn","prependListener","_events","dests","index","splice","ev","addListener","removeAllListeners","wrap","_this","bind","asyncIterator","_fromList","iterable","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","errorEmitted","ending","finalCalled","prefinished","rState","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","CorkedRequest","entry","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_MULTIPLE_CALLBACK","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writecb","writelen","onwriteStateUpdate","finishMaybe","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","bufferedRequestCount","_write","writev","_writev","final","_final","doWrite","onwriteDrain","holder","count","allBuffers","isBuf","callFinal","need","prefinish","current","_","hasInstance","Function","object","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","nb","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","_transform","flush","_flush","done","err2","promise","window","Promise","resolve","then","catch","setTimeout","g","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","LN2","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_defineProperty","_defineProperties","props","descriptor","custom","instance","Constructor","_classCallCheck","tail","protoProps","staticProps","hasStrings","_getString","_getBuffer","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","depth","customInspect","config","localStorage","warned","console","trace","warn","copyProps","SafeBuffer","_Object$setPrototypeO","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","reject","lastPromise","wrapForNext","_this2","_Object$create","iterator","ERR_MISSING_ARGS","destroyer","closed","to","popCallback","streams","pop","destroys","reduce","isNamedNode","term","termType","isBlankNode","isLiteral","isVariable","isDefaultGraph","inDefaultGraph","quad","graph","iri","factory","prefixes","defaultPrefixes","processPrefix","cache","local","namedNode","N3DataFactory","DEFAULTGRAPH","_blankNodeCounter","escapedLiteral","quadId","DataFactory","NamedNode","blankNode","BlankNode","variable","Variable","literal","languageOrDataType","Literal","datatype","isInteger","defaultGraph","triple","Term","id","other","atPos","datatypeString","dtPos","char","language","DefaultGraph","termFromId","endPos","components","unescapeQuotes","termToId","escapeQuotes","subject","predicate","Quad","_subject","_predicate","_object","_graph","quoted","blankNodePrefix","N3Parser","_contextStack","_setBase","baseIRI","initDataFactory","format","isTurtle","isTriG","isNTriples","isNQuads","isN3","isLineMode","_supportsNamedGraphs","_readPredicateOrNamedGraph","_readPredicate","_supportsQuads","_supportsRDFStar","_resolveRelativeIRI","_blankNodePrefix","_lexer","lexer","_explicitQuantifiers","explicitQuantifiers","fragmentPos","_base","_basePath","_baseRoot","_baseScheme","n3Mode","inverse","_inversePredicate","blankPrefix","_prefixes","quantified","_quantified","_error","_callback","_sparqlStyle","_readPrefix","_readBaseIRI","_readSubject","_readNamedGraphLabel","quantifier","_resolveIRI","_namedNode","_blankNode","_saveContext","_readBlankNodeHead","RDF_NIL","_readListItem","_readPunctuation","N3_FORSOME","_quantifier","_readQuantifierList","N3_FORALL","_literalValue","_completeSubjectLiteral","_literal","_readEntity","_getPathReader","ABBREVIATIONS","_readBlankNodeTail","_readObject","_readDataTypeOrLang","_getContextEndReader","_readGraph","_readBlankNodePunctuation","_emit","empty","_restoreContext","_readPredicateAfterBlank","previousList","stack","parent","RDF_FIRST","_readListItemDataTypeOrLang","RDF_REST","_completeObjectLiteral","_completeLiteral","listItem","completed","_readCallback","inversePredicate","_readFormulaTail","_readInTopContext","_readQuadPunctuation","_readPrefixIRI","prefixNode","_prefixCallback","_readDeclarationPunctuation","_readNamedGraphBlankLabel","entity","QUANTIFIERS_GRAPH","_readQuantifierPunctuation","afterPath","_afterPath","_readPath","_readForwardPath","_readBackwardPath","_readRDFStarTail","_quad","contextStack","_readRDFStarTailOrGraph","_removeDotSegments","result","pathStart","segmentStart","quadCallback","prefixCallback","quads","tokenize","every","parser","escape","escapeAll","escapedCharacters","SerializedTerm","N3Writer","outputStream","_prefixRegex","_lists","lists","_outputStream","_endStream","_writeQuad","_writeQuadLine","_baseIRI","_prefixIRIs","addPrefixes","_inDefaultGraph","_encodeIriOrBlank","_encodeObject","_encodePredicate","_encodeSubject","_prefixMatch","quadToString","_encodeQuad","characterReplacer","prefixMatch","_encodeLiteral","addQuad","hasPrefixes","IRIlist","prefixList","prefixIRI","child","children","contents","elements","_blockedWrite","singleDone","character","N3Store","_size","_graphs","_id","_ids","_entities","_blankNodeIndex","_factory","addQuads","subjects","graphs","graphKey","subjectKey","predicateKey","index0","key0","key1","key2","index1","index2","existed","name0","name1","name2","entityKeys","value0","entity0","value1","entity1","values","isString","uniqueIds","graphItem","predicates","objects","freeze","ids","entities","changed","_addToIndex","removeQuad","getQuads","_removeFromIndex","remove","removeMatches","subjectId","predicateId","objectId","_getGraphs","graphId","_findInIndex","DatasetCoreAndReadableStream","_countInIndex","some","results","forSubjects","_uniqueEntities","_loopBy2Keys","_loopByKey1","_loopByKey0","_loop","forPredicates","forObjects","o","forGraphs","suggestedName","ignoreErrors","onError","node","tails","toRemove","tailQuad","headPos","items","malformed","objectQuads","subjectQuads","removeQuads","n3Store","assign","_filtered","filtered","add","delete","has","N3StreamParser","onData","onEnd","parse","uri","N3StreamWriter","writer","_writer","addPrefix"],"mappings":"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","file":"static/js/3.504a5ba7.chunk.js","sourcesContent":["'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","const RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: `${XSD}decimal`,\n    boolean: `${XSD}boolean`,\n    double:  `${XSD}double`,\n    integer: `${XSD}integer`,\n    string:  `${XSD}string`,\n  },\n  rdf: {\n    type:       `${RDF}type`,\n    nil:        `${RDF}nil`,\n    first:      `${RDF}first`,\n    rest:       `${RDF}rest`,\n    langString: `${RDF}langString`,\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: `${SWAP}reify#forSome`,\n    forAll:  `${SWAP}reify#forAll`,\n  },\n  log: {\n    implies: `${SWAP}log#implies`,\n  },\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nconst escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nconst escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nconst illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nconst lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nconst invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (const key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    let input = this._input;\n    const outputComments = this._comments;\n    while (true) {\n      // Count and skip whitespace lines\n      let whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (outputComments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (outputComments && (comment = this._comment.exec(input)))\n            callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      const line = this._line, firstChar = input[0];\n      let type = '', value = '', prefix = '',\n          match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(`${input} `)))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(`${input} `))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(`${input} `)))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      const token = { line: line, type: type, value: value, prefix: prefix };\n      callback(null, token);\n      this.previousToken = token;\n      this._previousMarker = type;\n      // Advance to next part to tokenize\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    const err = new Error(`Unexpected \"${issue}\" on line ${this._line}.`);\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ### Strips off any starting UTF BOM mark.\n  _readStartingBom(input) {\n    return input.startsWith('\\ufeff') ? input.substr(1) : input;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = this._readStartingBom(input);\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => this._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        const tokens = [];\n        let error;\n        this._tokenizeToEnd((e, t) => e ? (error = e) : tokens.push(t), true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', data => {\n        if (this._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (this._pendingBuffer) {\n            data = Buffer.concat([this._pendingBuffer, data]);\n            this._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            this._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            // Only read a BOM at the start\n            if (typeof this._input === 'undefined')\n              this._input = this._readStartingBom(typeof data === 'string' ? data : data.toString());\n            else\n              this._input += data;\n            this._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', () => {\n        if (typeof this._input === 'string')\n          this._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","module.exports = require('events').EventEmitter;\n","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  const prefixes = Object.create(null);\n  for (const prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      const cache = Object.create(null);\n      prefixes[prefix] = local => {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error(`Unknown prefix: ${prefix}`);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n","// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\n// eslint-disable-next-line prefer-const\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    const id = this.id;\n    let atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    const id = this.id, dtPos = id.lastIndexOf('\"') + 1;\n    const char = dtPos < id.length ? id[dtPos] : '';\n    // If \"^\" it follows, return the remaining substring\n    return char === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (char !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super(`_:${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super(`?${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    const endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return `_:${term.value}`;\n  case 'Variable':     return `?${term.value}`;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return `\"${term.value}\"${\n    term.language ? `@${term.language}` :\n      (term.datatype && term.datatype.value !== xsd.string ? `^^${term.datatype.value}` : '')}`;\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error(`Unexpected termType: ${term.termType}`);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this._subject   = subject;\n    this._predicate = predicate;\n    this._object    = object;\n    this._graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  get subject() {\n    return this._subject;\n  }\n\n  get predicate() {\n    return this._predicate;\n  }\n\n  get object() {\n    return this._object;\n  }\n\n  get graph() {\n    return this._graph;\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this._subject.toJSON(),\n      predicate: this._predicate.toJSON(),\n      object:    this._object.toJSON(),\n      graph:     this._graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this._subject.equals(other.subject)     &&\n                      this._predicate.equals(other.predicate) &&\n                      this._object.equals(other.object)       &&\n                      this._graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal(`\"${value}\"@${languageOrDataType.toLowerCase()}`);\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal(`\"${value}\"`) :\n    new Literal(`\"${value}\"^^${datatype}`);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n","// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    const format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = iri => { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      const fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    const n3Mode = this._n3Mode;\n    this._contextStack.push({\n      subject: subject, predicate: predicate, object: object,\n      graph: graph, type: type,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? `${this._graph.id.substr(2)}.` : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext() {\n    const context = this._contextStack.pop(), n3Mode = this._n3Mode;\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    let value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      const iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      const prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error(`Undefined prefix \"${token.prefix}:\"`, token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error(`Expected entity but got ${token.type}`, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    const type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error(`Unexpected ${type}`, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case '[':\n      if (this._n3Mode) {\n        // Start a new quad with a new blank node as subject\n        this._saveContext('blank', this._graph, this._subject,\n                          this._subject = this._blankNode(), null);\n        return this._readBlankNodeHead;\n      }\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error(`Expected graph but got ${token.type}`, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    const empty = this._predicate === null;\n    this._restoreContext();\n    // If the blank node was the object, restore previous context and read punctuation\n    if (this._object !== null)\n      return this._getContextEndReader();\n    // If the blank node was the predicate, continue reading the object\n    else if (this._predicate !== null)\n      return this._readObject;\n    // If the blank node was the subject, continue reading the predicate\n    else\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    let item = null,                      // The item of the list\n        list = null,                      // The list itself\n        next = this._readListItem;        // The next function to execute\n    const previousList = this._subject,   // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1]; // The parent containing the current list\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext();\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      const datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext();\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    let next, graph = this._graph;\n    const subject = this._subject, inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      const predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    let next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error(`Expected IRI to follow prefix \"${this._prefix}:\"`, token);\n    const prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    const iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    let entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error(`Unexpected ${token.type}`, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      const stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        const item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext();\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    let subject, predicate;\n    const object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    const subject = this._blankNode();\n    let predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error(`Expected >> to follow \"${this._object.id}\"`, token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext();\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    const contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    const err = new Error(`${message} on line ${token.line}.`);\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    const length = iri.length;\n    let result = '', i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return `${result}/${iri.substr(i + 1)}`;\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : `b${blankNodePrefix++}_`;\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      const quads = [];\n      let error;\n      this._callback = (e, t) => { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(token => {\n        return this._readCallback = this._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, (error, token) => {\n      if (error !== null)\n        this._callback(error), this._callback = noop;\n      else if (this._readCallback)\n        this._readCallback = this._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  const namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n","// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nconst escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      let output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end: done => { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._lineMode = false;\n      this._graph = DEFAULTGRAPH;\n      this._baseIRI = options.baseIRI;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n    }\n    else {\n      this._lineMode = true;\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : `${this._encodeIriOrBlank(graph)} {\\n`));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(`;\\n    ${\n                      this._encodePredicate(this._predicate = predicate)} ${\n                      this._encodeObject(object)}`, done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write(`${(this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject)} ${\n                    this._encodePredicate(this._predicate = predicate)} ${\n                    this._encodeObject(object)}`, done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  `${this._encodeSubject(subject)} ${\n            this._encodeIriOrBlank(predicate)} ${\n            this._encodeObject(object)\n            }${graph && graph.value ? ` ${this._encodeIriOrBlank(graph)} .\\n` : ' .\\n'}`;\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(t => {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    let iri = entity.value;\n    // Use relative IRIs if requested and possible\n    if (this._baseIRI && iri.startsWith(this._baseIRI))\n      iri = iri.substr(this._baseIRI.length);\n    // Escape special characters\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? `<${iri}>` :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    let value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n\n    // Write a language-tagged literal\n    if (literal.language)\n      return `\"${value}\"@${literal.language}`;\n\n    // Write dedicated literals per data type\n    if (this._lineMode) {\n      // Only abbreviate strings in N-Triples or N-Quads\n      if (literal.datatype.value === xsd.string)\n        return `\"${value}\"`;\n    }\n    else {\n      // Use common datatype abbreviations in Turtle or TriG\n      switch (literal.datatype.value) {\n      case xsd.string:\n        return `\"${value}\"`;\n      case xsd.boolean:\n        if (value === 'true' || value === 'false')\n          return value;\n        break;\n      case xsd.integer:\n        if (/^[+-]?\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.decimal:\n        if (/^[+-]?\\d*\\.\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.double:\n        if (/^[+-]?(?:\\d+\\.\\d*|\\.?\\d+)[eE][+-]?\\d+$/.test(value))\n          return value;\n        break;\n      }\n    }\n\n    // Write a regular datatyped literal\n    return `\"${value}\"^^${this._encodeIriOrBlank(literal.datatype)}`;\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    const prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    // Ignore prefixes if not supported by the serialization\n    if (!this._prefixIRIs)\n      return done && done();\n\n    // Write all new prefixes\n    let hasPrefixes = false;\n    for (let prefix in prefixes) {\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = (prefix += ':');\n      this._write(`@prefix ${prefix} <${iri}>.\\n`);\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '', prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = IRIlist.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` +\n                                     `^(${IRIlist})([a-zA-Z][\\\\-_a-zA-Z0-9]*)$`);\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    let children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm(`[ ${this._encodePredicate(child.predicate)} ${\n                                  this._encodeObject(child.object)} ]`);\n    // Generate a multi-triple or nested blank node\n    default:\n      let contents = '[';\n      // Write all triples in order\n      for (let i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += `, ${this._encodeObject(child.object)}`;\n        // Otherwise, write the predicate and the object\n        else {\n          contents += `${(i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate)} ${\n                      this._encodeObject(child.object)}`;\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(`${contents}\\n]`);\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    const length = elements && elements.length || 0, contents = new Array(length);\n    for (let i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm(`(${contents.join(' ')})`);\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone = done && ((error, result) => { singleDone = null, done(error, result); });\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n","// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    let size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    const graphs = this._graphs;\n    let subjects, subject;\n    for (const graphKey in graphs)\n      for (const subjectKey in (subjects = graphs[graphKey].subjects))\n        for (const predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {});\n    const index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0], index2 = index1[key1];\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) return;\n    delete index1[key1];\n    for (const key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex(index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    let tmp, index1, index2;\n    // Depending on the number of variables, keys or reverse index are faster\n    const varCount = !key0 + !key1 + !key2,\n        entityKeys = varCount > 1 ? Object.keys(this._ids) : this._entities;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      const entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          const entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              const parts = { subject: null, predicate: null, object: null };\n              parts[name0] = termFromId(entity0, this._factory);\n              parts[name1] = termFromId(entity1, this._factory);\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              const quad = this._factory.quad(\n                parts.subject, parts.predicate, parts.object, termFromId(graph, this._factory));\n              if (array)\n                array.push(quad);\n              else if (callback(quad))\n                return true;\n            }\n          }\n        }\n      }\n    }\n    return array;\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (const key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    let index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    let key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    let index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    let count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    const graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    const uniqueIds = Object.create(null);\n    return id => {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(this._entities[id], this._factory));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `add` adds the specified quad to the dataset.\n  // Returns the dataset instance it was called on.\n  // Existing quads, as defined in Quad.equals, will be ignored.\n  add(quad) {\n    this.addQuad(quad);\n    return this;\n  }\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids;\n    const entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    const changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `delete` removes the specified quad from the dataset.\n  // Returns the dataset instance it was called on.\n  delete(quad) {\n    this.removeQuad(quad);\n    return this;\n  }\n\n  // ### `has` determines whether a dataset includes a certain quad.\n  // Returns true or false as appropriate.\n  has(quad) {\n    const quads = this.getQuads(quad.subject, quad.predicate, quad.object, quad.graph);\n    return quads.length !== 0;\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    stream.on('data', quad => { this.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids, graphs = this._graphs;\n    let graphItem, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    stream.on('data', quad => { this.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    const stream = new Readable({ objectMode: true });\n\n    stream._read = () => {\n      for (const quad of this.getQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return this.remove(stream);\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const quads = [], graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return quads;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId, null, quads);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId, null, quads);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId, null, quads);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId, null, quads);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId, null, quads);\n      }\n    }\n    return quads;\n  }\n\n  // ### `match` returns a new dataset that is comprised of all quads in the current instance matching the given arguments.\n  // The logic described in Quad Matching is applied for each quad in this dataset to check if it should be included in the output dataset.\n  // Note: This method always returns a new DatasetCore, even if that dataset contains no quads.\n  // Note: Since a DatasetCore is an unordered set, the order of the quads within the returned sequence is arbitrary.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  // For backwards compatibility, the object return also implements the Readable stream interface.\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this, subject, predicate, object, graph);\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let count = 0, content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(quad => {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    let some = false;\n    const every = !this.some(quad => {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return false;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n          // If subject and object are given, the object index will be the fastest\n            if (this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                                  'object', 'subject', 'predicate', graphId, callback, null))\n              return true;\n          }\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            if (this._findInIndex(content.subjects, subjectId, predicateId, null,\n                                  'subject', 'predicate', 'object', graphId, callback, null))\n              return true;\n        }\n        else if (predicateId) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          if (this._findInIndex(content.predicates, predicateId, objectId, null,\n                                'predicate', 'object', 'subject', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          if (this._findInIndex(content.objects, objectId, null, null,\n                                'object', 'subject', 'predicate', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else\n        // If nothing is given, iterate subjects and predicates first\n        if (this._findInIndex(content.subjects, null, null, null,\n                              'subject', 'predicate', 'object', graphId, callback, null)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    const results = [];\n    this.forSubjects(s => { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    const results = [];\n    this.forPredicates(p => { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    const results = [];\n    this.forObjects(o => { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    const results = [];\n    this.forGraphs(g => { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (const graph in this._graphs) {\n      this.some(quad => {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    let name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = `_:${suggestedName}`, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = `_:b${this._blankNodeIndex++}`; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    const lists = {}; // has scalar keys so could be a simple Object\n    const onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    const tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    const toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      const items = [];             // the members found as objects of rdf:first quads\n      let malformed = false;      // signals whether the current list is malformed\n      let head;                   // the head of the list (_:b1 in above example)\n      let headPos;                // set to subject or object when head is set\n      const graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      let current = tailQuad.subject;\n      while (current && !malformed) {\n        const objectQuads = this.getQuads(null, null, current, null);\n        const subjectQuads = this.getQuads(current, null, null, null);\n        let quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (let i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (let i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n\n  // ### Store is an iterable.\n  // Can be used where iterables are expected: for...of loops, array spread operator,\n  // `yield*`, and destructuring assignment (order is not guaranteed).\n  *[Symbol.iterator]() {\n    yield* this.getQuads();\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n\n/**\n * A class that implements both DatasetCore and Readable.\n */\nclass DatasetCoreAndReadableStream extends Readable {\n  constructor(n3Store, subject, predicate, object, graph) {\n    super({ objectMode: true });\n    Object.assign(this, { n3Store, subject, predicate, object, graph });\n  }\n\n  get filtered() {\n    if (!this._filtered) {\n      const { n3Store, graph, object, predicate, subject } = this;\n      const quads = n3Store.getQuads(subject, predicate, object, graph);\n      this._filtered = new N3Store(quads, { factory: n3Store._factory });\n    }\n    return this._filtered;\n  }\n  get size() {\n    return this.filtered.size;\n  }\n\n  _read() {\n    for (const quad of this.filtered.getQuads())\n      this.push(quad);\n    this.push(null);\n  }\n\n  add(quad) {\n    return this.filtered.add(quad);\n  }\n\n  delete(quad) {\n    return this.filtered.delete(quad);\n  }\n\n  has(quad) {\n    return this.filtered.has(quad);\n  }\n\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this.filtered, subject, predicate, object, graph);\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.filtered.getQuads();\n  }\n}\n","// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    const parser = new N3Parser(options);\n    let onData, onEnd;\n    parser.parse({\n      on: (event, callback) => {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      (error, quad) => { error && this.emit('error', error) || quad && this.push(quad); },\n      // Emit prefixes through the `prefix` event\n      (prefix, uri) => { this.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = (chunk, encoding, done) => { onData(chunk); done(); };\n    this._flush = done => { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    stream.on('data',  chunk => { this.write(chunk); });\n    stream.on('end',   ()      => { this.end(); });\n    stream.on('error', error => { this.emit('error', error); });\n    return this;\n  }\n}\n","// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8', writableObjectMode: true });\n\n    // Set up writer with a dummy stream object\n    const writer = this._writer = new N3Writer({\n      write: (quad, encoding, callback) => { this.push(quad); callback && callback(); },\n      end: callback => { this.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = (quad, encoding, done) => { writer.addQuad(quad, done); };\n    this._flush = done => { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    stream.on('data',   quad => { this.write(quad); });\n    stream.on('end',    () => { this.end(); });\n    stream.on('error',  error => { this.emit('error', error); });\n    stream.on('prefix', (prefix, iri) => { this._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n"],"sourceRoot":""}